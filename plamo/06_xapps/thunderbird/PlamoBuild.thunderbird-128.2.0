#!/bin/sh
unset LS_BLOCK_SIZE
##############################################################
pkgbase='thunderbird'
vers="128.2.0"
url="https://archive.mozilla.org/pub/${pkgbase}/releases/${vers}esr/source/${pkgbase}-${vers}esr.source.tar.xz"
langpack_ja="https://ftp.mozilla.org/pub/thunderbird/releases/${vers}esr/linux-x86_64/xpi/ja.xpi"
verify="${url}.asc"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG='--disable-static --enable-shared'
DOCS='AUTHORS LICENSE README.txt sourcestamp.txt'
patchfiles=''
addfiles='langpack.sh mozconfig thunderbird.desktop vendor.js'
compress=tzst

rustver=""
##############################################################

source /usr/share/plamobuild_functions.sh

B=$W/build

ulimit -n 4096

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
  if [ ! -f ${langpack_ja##*/} ]; then
    wget $langpack_ja
  fi
fi

if [ $opt_config -eq 1 ] ; then
  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done

  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    patch -p1 < $W/$patch
  done

  rm -f $S/.mozconfig
  cp -v $W/mozconfig $S/.mozconfig

  # for current ICU
  sed -e 's/checkImpl/checkFFImpl/g' -i js/src/vm/JSContext*.h

  # setup rust
  cd $W
  echo "We need rust toolchain. Now, setup rust"
  if [ -f /var/log/packages/rustc ]; then
      echo "Rustc pacakge is installed. We don't use it, so remove."
      sudo removepkg rustc
  fi

  export PATH="$PATH:$HOME/.cargo/bin"
  if [ -f ~/.cargo/bin/rustc ]; then
    if [ x"$rustver" = "x" ]; then
      rustup update
      rustup default stable
    else
      rustup default $rustver
    fi
  else
      wget -O rustup-init.sh https://sh.rustup.rs
      sh rustup-init.sh -y
      if [ x"$rustver" != "x" ]; then
        rustup default $rustver
      fi
  fi

  for p in toml pysolfc tomli-w
  do
      pip3 list | grep $p
      if [ $? -ne 0 ]; then
          pip3 install --user $p
      fi
  done

  cd $S

fi
    
if [ $opt_build -eq 1 ] ; then
  cd $S
  export PATH="$HOME/.cargo/bin:$PATH"
  export MOZBUILD_STATE_PATH=${PWD}/mozbuild
  export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=pip
  export MOZ_ENABLE_FULL_SYMBOLS=1
  # disable desktop notification (? maybe...)
  export MOZ_NOSPAM=1

  ulimit -n 4096

  if [ -d $W/build ]; then
    rm -rf $W/build
  fi
  ./mach build
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $S
  export MOZBUILD_STATE_PATH=${PWD}/mozbuild
  export MACH_BUILD_PYTHON_NATIVE_PACKAGE_SOURCE=system
  export LDFLAGS='-Wl,--as-needed'
  DESTDIR=$P ./mach install

  # Install langpack
  sh $W/langpack.sh $W
  install -Dm644 -v $W/ja.xpi.plamo \
	  $P/usr/${libdir}/thunderbird/extensions/langpack-ja@thunderbird.mozilla.org.xpi

  # desktop file
  install -Dm644 -v $W/thunderbird.desktop \
	  $P/usr/share/applications/thunderbird.desktop
  install -Dm644 -v $W/thunderbird.desktop \
	  $docdir/$src/thunderbird.desktop

  # vendor.js (default configuration)
  install -Dm644 -v $W/vendor.js \
	  $P/usr/${libdir}/thunderbird/defaults/preferences/vendor.js
  install -Dm644 -v $W/vendor.js $docdir/$src/vendor.js

  # icon
  install -dm755 -v $P/usr/share/pixmaps
  ln -sfv /usr/${libdir}/thunderbird/chrome/icons/default/default256.png \
     $P/usr/share/pixmaps/thunderbird.png
  for i in 16 22 24 32 48 256
  do
    install -Dm644 comm/mail/branding/nightly/default${i}.png \
	    $P/usr/share/icons/hicolor/${i}x${i}/apps/thunderbird.png
  done
  
################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
