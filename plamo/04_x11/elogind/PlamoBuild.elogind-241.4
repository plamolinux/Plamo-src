#!/bin/sh
##############################################################
pkgbase="elogind"
vers="241.4"
url="https://github.com/elogind/elogind/archive/v${vers}/elogind-${vers}.tar.gz"
verify=""
digest=""
arch=`uname -m`
build=B2
src="elogind-${vers}"
OPT_CONFIG="-Dcgroup-controller=elogind -Ddbuspolicydir=/etc/dbus-1/system.d"
DOCS="LICENSE.GPL2 LICENSE.LGPL2.1 NEWS README.md TODO meson_options.txt"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles="elogind-user.pam"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    sed -e '/dirent-util/a #include "env-file.h"'                            \
	-e '/sessions/{n;n;s/=.*$/= parse_env_file (NULL, p, "UID", \&s);/}' \
	-i src/basic/cgroup-util.c

    cd $B
    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    meson --prefix=/usr --libdir=/usr/lib ${OPT_CONFIG} $S  
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    ninja
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  DESTDIR=$P ninja install

  ln -sfv libelogind.pc $P/usr/${libdir}/pkgconfig/libsystemd.pc
  ln -sfv elogind $P/usr/include/systemd

  install -Dm644 -v $W/elogind-user.pam $P/etc/pam.d/elogind-user
  install -Dm644 -v $W/elogind-user.pam $docdir/$src/elogind-user.pam

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
grep pam_elogind /etc/pam.d/system-session > /dev/null 2>&1
if [ $? -eq 0 ]; then
	exit 0
fi
cat >> /etc/pam.d/system-session << "EOF2"
# Begin elogind addition
    
session  required    pam_loginuid.so
session  optional    pam_elogind.so

# End elogind addition
EOF2
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
