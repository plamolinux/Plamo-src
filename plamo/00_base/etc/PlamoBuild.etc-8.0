#!/bin/sh
##############################################################
pkgbase='etc'
vers='8.0'
url=""
iana_vers="20240912"
iana_url="https://github.com/Mic92/iana-etc/releases/download/${iana_vers}/iana-etc-${iana_vers}.tar.gz"
verify=""
arch=noarch
build=B1
src="files"
OPT_CONFIG=''
DOCS=''
patchfiles=''
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
    if [ ! -f ${iana_url##*/} ]; then
	wget $iana_url
    fi
    tar xvf ${iana_url##*/}
fi

if [ $opt_config -eq 1 ] ; then
    echo "Copy Iana-Etc files to \$src"
    # IANA etc (protocol, services)
    cp -v "$( basename ${iana_url##*/} .tar.gz )"/{protocols,services} $S/etc/
    echo "You should commit changes under \$src, if change."
fi

if [ $opt_build -eq 1 ] ; then
  echo "There is nothing to do."
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $S
  cp -a etc $P/
  if [ `id -u` -eq 0 ]; then
    chown -R root:root $P/*
  fi
  mkdir -p $docdir/$src

  mkdir -p $P/install
  cat <<EOF > $P/install/doinst.sh
( cd etc ; rm -rf issue.net )
( cd etc ; ln -sf issue issue.net )
( cd etc ; rm -rf skel )
( cd etc ; ln -sf template/Default skel )
( cd var/log ; rm -rf utmp )
( cd var/log ; ln -sf /var/run/utmp utmp)
if [ ! -r etc/passwd ] ; then
  cp etc/npasswd etc/passwd
fi
if [ ! -r etc/passwd.OLD ] ; then
  mv etc/npasswd etc/passwd.OLD
else
  rm etc/npasswd
fi
if [ ! -r etc/shadow ] ; then
  mv etc/nshadow etc/shadow
else
  rm etc/nshadow
fi
if [ ! -r etc/group ] ; then
  mv etc/ngroup etc/group
else
  rm etc/ngroup
fi
if [ ! -r etc/hosts ] ; then
  mv etc/hosts-incoming etc/hosts
else
  rm -f etc/hosts-incoming
fi
if [ ! -r etc/networks ] ; then
  mv etc/networks-incoming etc/networks
else
  rm -f etc/networks-incoming
fi
if [ ! -r etc/hostname ]; then
  mv etc/hostname-incoming etc/hostname
else
  rm -f etc/hostname-incoming
fi
( cd etc ; rm -rf HOSTNAME )
( cd etc ; ln -sf hostname HOSTNAME )
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

  mv $P/usr/share/doc/$src $P/usr/share/doc/"$pkgbase"-"$vers"

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
