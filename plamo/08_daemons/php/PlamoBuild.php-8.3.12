#!/bin/sh
##############################################################
pkgbase="php"
vers="8.3.12"
url="https://www.php.net/distributions/php-${vers}.tar.xz"
verify="${url}.asc"
digest=""
arch=`uname -m`
build=B1
src="php-${vers}"
OPT_CONFIG=()
BUILD_TYPE=(apache cgi)
DOCS="LICENSE NEWS README.REDIST.BINS README.md"
patchfiles="0001-Disable-MPM-detection-in-configure-Always-build-NTS.patch"
# specifies files that are not in source archive and patchfiles
addfiles="php8.conf php-fpm.init"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# 共通オプション
OPT_CONFIG=("${OPT_CONFIG[@]}"
	    --srcdir=$B
	    --config-cache
	    --prefix=/usr
	    --sysconfdir=/etc/php
	    --localstatedir=/var
	    --with-layout=GNU
	    --with-config-file-path=/etc/php
	    --with-config-file-scan-dir=/etc/php/conf.d
	    --disable-rpath
	    --mandir=/usr/share/man)

# 拡張
OPT_MODULE=(--enable-bcmath=shared
	    --enable-calendar=shared
	    --enable-dba=shared
	    --enable-exif=shared
	    --enable-ftp=shared
	    --enable-gd=shared
	    --enable-intl=shared
	    --enable-mbstring
	    --enable-pcntl
	    --enable-shmop=shared
	    --enable-soap=shared
	    --enable-sockets=shared
	    --enable-sysvmsg=shared
	    --enable-sysvsem=shared
	    --enable-sysvshm=shared
	    --with-bz2=shared
	    --with-curl=shared
	    --with-enchant=shared
	    --with-external-pcre
	    --with-ffi=shared
	    --with-freetype
	    --with-gdbm
	    --with-gettext=shared
	    --with-gmp=shared
	    --with-iconv=shared
	    --with-ldap=shared
	    --with-mhash
	    --with-mysql-sock=/run/mysqld/mysqld.sock
	    --with-mysqli=shared,mysqlnd
	    --with-openssl
	    --with-password-argon2
	    --with-pdo-mysql=shared,mysqlnd
	    --with-pdo-sqlite=shared
	    --with-pspell=shared
	    --with-readline
	    --with-sodium=shared
	    --with-sqlite3=shared
	    --with-xsl=shared
	    --with-zip=shared
	    --with-zlib)

OPT_CONFIG_cgi=(--enable-cgi
		--enable-fpm
		--with-fpm-acl
		--with-fpm-user=www
		--with-fpm-group=apache
		--enable-embed=shared
		${OPT_MODULE[@]})

OPT_CONFIG_apache=(--with-apxs2=/usr/bin/apxs
		   ${OPT_MODULE[@]})

export EXTENSION_DIR=/usr/${libdir}/php/modules

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
    cd $B
    for patch in $patchfiles ; do
        patch -p1 < $W/$patch
    done

    touch configure.ac
    ./buildconf --force

    mkdir cgi apache

    echo "=== configure cgi/fpm ==="
    pushd cgi
    ln -s ../configure
    ./configure ${OPT_CONFIG[@]} ${OPT_CONFIG_cgi[@]}
    if [ $? != 0 ]; then
      echo "configure error. $0 script stop"
      exit 255
    fi
    popd

    echo "=== configure apache ==="
    pushd apache
    ln -s ../configure
    ./configure ${OPT_CONFIG[@]} ${OPT_CONFIG_apache[@]}
    if [ $? != 0 ]; then
      echo "configure error. $0 script stop"
      exit 255
    fi
    popd
fi

if [ $opt_build -eq 1 ] ; then
    for t in ${BUILD_TYPE[@]}
    do
	cd $B/$t
	echo "=== build $t ==="
	export LDFLAGS='-Wl,--as-needed'
	make
	if [ $? != 0 ]; then
            echo "build error. $0 script stop"
            exit 255
	fi
    done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  pushd cgi
  make -j1 INSTALL_ROOT=$P install-{modules,cli,build,headers,programs,pharcmd}
  make -j1 INSTALL_ROOT=$P install-cgi
  make -j1 INSTALL_ROOT=$P install-fpm
  install -D -m644 -v $B/php.ini-production $P/etc/php/php.ini.dist
  install -d -m755 -v $P/etc/php/conf.d/
  popd

  pushd apache
  install -Dm755 libs/libphp.so $P/usr/${libdir}/httpd/modules/libphp.so
  popd

  ( cd $P ; rm -rfv .channels .depdb .filemap .lock .registry .depdblock )
  rm -rfv $P/var

  install -Dm644 -v $W/php8.conf $P/etc/httpd/extra.dist/php8.conf
  install -Dm644 -v $W/php8.conf $docdir/$src/php8.conf
  install -Dm644 -v $W/php-fpm.init $docdir/$src/php-fpm.init

  # php-fpm init
  install -Dm644 -v $W/php-fpm.init $P/etc/rc.d/init.d/php-fpm
  for i in $(seq 0 6)
  do
    install -dm755 -v $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
        ln -sfv ../init.d/php-fpm $P/etc/rc.d/rc"$i".d/K28php-fpm
	;;
      3|4|5)
	ln -sfv ../init.d/php-fpm $P/etc/rc.d/rc"$i".d/S32php-fpm
	;;
    esac
  done

  mkdir -p $P/install
  cat <<EOF >> $P/install/initpkg
if [ -f /etc/httpd/extra/php7.conf ]; then
  rm -fv /etc/httpd/extra/php7.conf
fi
if [ ! -f /etc/httpd/extra/php8.conf ]; then
  ( cd /etc/httpd ; cp extra.dist/php8.conf extra/php8.conf )
fi
if [ ! -f /etc/php/php.ini ]; then
  ( cd /etc/php ; cp php.ini.dist php.ini )
fi
if [ ! -f /etc/php/php-fpm.conf ]; then
  ( cd /etc/php ; cp php-fpm.conf.default php-fpm.conf )
fi
if [ ! -f /etc/php/php-fpm.d/www.conf ]; then
  ( cd /etc/php/php-fpm.d/ ; cp www.conf.default www.conf )
fi
EOF


################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
