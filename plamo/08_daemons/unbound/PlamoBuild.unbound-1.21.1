#!/bin/sh
##############################################################
pkgbase='unbound'
vers="1.21.1"
url="http://www.unbound.net/downloads/${pkgbase}-${vers}.tar.gz"
verify="$url.asc"
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-static --with-pidfile=/run/unbound.pid"
DOCS='LICENSE README'
patchfiles=''
addfiles="unbound.conf unbound.init"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  for f in $addfiles $patchfiles
  do
    if [ ! -f $f ]; then
      echo "Required file ($f) is missing."
      exit 255
    fi
  done
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG[$i]}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  install -v -d $P/usr/bin
  mv -v $P/usr/sbin/unbound-host $P/usr/bin/unbound-host

  # copy config file for plamo to /etc/unbound
  install -v -m 644 $W/unbound.conf $P/etc/unbound/unbound.conf.dist

  # copy init.file
  install -v -D -m 644 $W/unbound.init $P/etc/rc.d/init.d/unbound
  install -v -D -m 644 $W/unbound.init $docdir/$src/unbound.init

  # copy default config file to docdir
  mv -v $P/etc/unbound/unbound.conf $docdir/"$src"/example.conf

  for i in $(seq 0 6)
  do
    install -dm755 $P/etc/rc.d/rc"$i".d
    case $i in
      0|1|2|6)
	ln -sfv ../init.d/unbound $P/etc/rc.d/rc"$i".d/K79unbound
	;;
      3|4|5)
	ln -sfv ../init.d/unbound $P/etc/rc.d/rc"$i".d/S21unbound
	;;
    esac
  done

  install -d $P/install
  cat <<EOF >> $P/install/initpkg
if ! id unbound >/dev/null 2>&1 ; then
  groupadd -g 88 unbound
  useradd -c "Unbound DNS resolver" -d /var/lib/unbound -u 88 -g unbound -s /bin/false unbound
fi
if [ ! -f /etc/unbound/unbound.conf ]; then
  ( cd /etc/unbound && cp unbound.conf.dist unbound.conf )
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
